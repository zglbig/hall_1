<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zgl.dao.mapper.IUserDao">
    <resultMap id="playerMap" type="org.zgl.dao.entity.DBUser">
        <id column="id" property="id"/>
        <result column="uid" property="uid"/>
        <result column="account" property="account"/>
        <result column="password" property="password"/>
        <result column="user_name" property="userName"/>
        <result column="base_info" property="baseInfo"/>
        <result column="sign_in" property="signIn"/>
        <result column="weath" property="weath"/>
        <result column="friends" property="friends"/>
        <result column="gift_bag" property="giftBag"/>
        <result column="task" property="task"/>
        <result column="create_time" property="createTime"/>
        <result column="last_edit_time" property="lastEditTime"/>
        <result column="generalize_uid" property="generalizeUid"/>
    </resultMap>

    <update id="updateDBUser" parameterType="org.zgl.dao.entity.DBUser">
        update db_user
        <set>
            <if test="uid != null">uid = #{uid},</if>
            <if test="account != null">account = #{account},</if>
            <if test="password != null">password = #{password},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="baseInfo != null">base_info = #{baseInfo},</if>
            <if test="signIn != null">sign_in = #{signIn},</if>
            <if test="friends != null">friends = #{friends},</if>
            <if test="giftBag != null">gift_bag = #{giftBag},</if>
            <if test="weath != null">weath = #{weath},</if>
            <if test="task != null">task = #{task},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="generalizeUid != null">generalize_uid = #{generalizeUid},</if>
            <if test="lastEditTime != null">last_edit_time = #{lastEditTime}</if>
        </set>
        where id=#{id}
    </update>

    <insert id="insertDBUser" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into db_user(account,password,user_name,base_info,sign_in,weath,friends,gift_bag,task,generalize_uid,create_time,last_edit_time)
       values (#{account},#{password},#{userName},#{baseInfo},#{signIn},#{weath},#{friends},#{giftBag},#{task},#{generalizeUid},#{createTime},#{lastEditTime});
    </insert>
    <select id="queryDBUserByAccount" resultMap="playerMap">
        select id,uid,account,password,user_name,base_info,sign_in,weath,friends,gift_bag,task,generalize_uid,create_time,last_edit_time
        from db_user
        where account=#{account}
    </select>
    <select id="queryDBUserById" resultMap="playerMap">
        select id,uid,account,password,user_name,base_info,sign_in,weath,friends,gift_bag,task,generalize_uid,create_time,last_edit_time
        from db_user
        where id=#{id}
    </select>
    <select id="queryDBUserByUid" resultMap="playerMap">
        select id,uid,account,password,user_name,base_info,sign_in,weath,friends,gift_bag,task,generalize_uid,create_time,last_edit_time
        from db_user
        where uid=#{uid}
    </select>
    <select id="queryDBUserList" resultMap="playerMap">
        select id,uid,account,password,user_name,base_info,sign_in,weath,friends,gift_bag,task,generalize_uid,create_time,last_edit_time
        from db_user
        where id >= #{id}
    </select>
    <delete id="deleteDBUser">
        delete from db_user where uid=#{uid}
    </delete>
</mapper>